<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tools | Stonefishy Blog]]></title>
  <link href="http://stonefishy.github.io/blog/categories/tools/atom.xml" rel="self"/>
  <link href="http://stonefishy.github.io/"/>
  <updated>2015-05-19T22:59:51+08:00</updated>
  <id>http://stonefishy.github.io/</id>
  <author>
    <name><![CDATA[Yu]]></name>
    <email><![CDATA[andrewsy@live.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Sublime Text - Keyboard Shortcuts for Mac]]></title>
    <link href="http://stonefishy.github.io/blog/2015/05/16/sublime-text-keyboard-shortcuts-for-mac/"/>
    <updated>2015-05-16T12:21:06+08:00</updated>
    <id>http://stonefishy.github.io/blog/2015/05/16/sublime-text-keyboard-shortcuts-for-mac</id>
    <content type="html"><![CDATA[<h3>Editor</h3>

<table>
<thead>
<tr>
<th> Keypress     </th>
<th> Command                                                                  </th>
</tr>
</thead>
<tbody>
<tr>
<td> ⌘ + X        </td>
<td> Cut line                                                                 </td>
</tr>
<tr>
<td> ⌘ + ↩        </td>
<td> Insert line after                                                        </td>
</tr>
<tr>
<td> ⌘ + ⇧ + ↩    </td>
<td> Insert line before                                                       </td>
</tr>
<tr>
<td> ⌘ + ⌃ + ↑    </td>
<td> Move line/selection up                                                   </td>
</tr>
<tr>
<td> ⌘ + ⌃ + ↓    </td>
<td> Move line/selection down                                                 </td>
</tr>
<tr>
<td> ⌘ + L        </td>
<td> Select line - Repeat to select next lines                                </td>
</tr>
<tr>
<td> ⌘ + D        </td>
<td> Select word - Repeat to select next occurrence                           </td>
</tr>
<tr>
<td> ⌃ + ⌘ + G    </td>
<td> Select all occurrences of current selection                              </td>
</tr>
<tr>
<td> ⌃ + ⇧ + ↑    </td>
<td> Extra cursor on the line above                                           </td>
</tr>
<tr>
<td> ⌃ + ⇧ + ↓    </td>
<td> Extra cursor on the line below                                           </td>
</tr>
<tr>
<td> ⌃ + M        </td>
<td> Jump to closing parentheses Repeat to jump to opening parentheses        </td>
</tr>
<tr>
<td> ⌃ + ⇧ + M    </td>
<td> Select all contents of the current parentheses                           </td>
</tr>
<tr>
<td> ⌃ + A        </td>
<td> Move to beginning of line                                                </td>
</tr>
<tr>
<td> ⌃ + E        </td>
<td> Move to end of line                                                      </td>
</tr>
<tr>
<td> ⌘ + K, ⌘ + K </td>
<td> Delete from cursor to end of line                                        </td>
</tr>
<tr>
<td> ⌘ + K + ⌫    </td>
<td> Delete from cursor to start of line                                      </td>
</tr>
<tr>
<td> ⌘ + ]        </td>
<td> Indent current line(s)                                                   </td>
</tr>
<tr>
<td> ⌘ + [        </td>
<td> Un-indent current line(s)                                                </td>
</tr>
<tr>
<td> ⌘ + ⇧ + D    </td>
<td> Duplicate line(s)                                                        </td>
</tr>
<tr>
<td> ⌘ + J        </td>
<td> Join line below to the end of the current line                           </td>
</tr>
<tr>
<td> ⌘ + /        </td>
<td> Comment/un-comment current line                                          </td>
</tr>
<tr>
<td> ⌘ + ⌥ + /    </td>
<td> Block comment current selection                                          </td>
</tr>
<tr>
<td> ⌘ + Y        </td>
<td> Redo, or repeat last keyboard shortcut command                           </td>
</tr>
<tr>
<td> ⌘ + ⇧ + V    </td>
<td> Paste and indent correctly                                               </td>
</tr>
<tr>
<td> ⌃ + Space    </td>
<td> Select next auto-complete suggestion                                     </td>
</tr>
<tr>
<td> ⌃ + U        </td>
<td> Soft undo; jumps to your last change before undoing change when repeated </td>
</tr>
<tr>
<td> ⌃ + ⇧ + Up   </td>
<td> Column selection up                                                      </td>
</tr>
<tr>
<td> ⌃ + ⇧ + Down </td>
<td> Column selection down                                                    </td>
</tr>
<tr>
<td> ⌃ + ⇧ + W    </td>
<td> Wrap Selection in html tag                                               </td>
</tr>
<tr>
<td> ⌃ + ⇧ + K    </td>
<td> Delete current line of cursor                                            </td>
</tr>
</tbody>
</table>


<!-- more -->


<hr />

<h3>Navigation</h3>

<table>
<thead>
<tr>
<th> Keypress       </th>
<th> Command                   </th>
</tr>
</thead>
<tbody>
<tr>
<td> ⌘ + P or ⌘ + T </td>
<td> Quick-open files by name  </td>
</tr>
<tr>
<td> ⌘ + R          </td>
<td> Goto symbol               </td>
</tr>
<tr>
<td> ⌃ + G          </td>
<td> Goto line in current file </td>
</tr>
</tbody>
</table>


<hr />

<h3>General</h3>

<table>
<thead>
<tr>
<th> Keypress      </th>
<th> Command                      </th>
</tr>
</thead>
<tbody>
<tr>
<td> ⌘ + ⇧ + P     </td>
<td> Command Palette              </td>
</tr>
<tr>
<td> ⌃ + `         </td>
<td> Python Console               </td>
</tr>
<tr>
<td> ⌃ + ⌘ + F     </td>
<td> Toggle fullscreen mode       </td>
</tr>
<tr>
<td> ⌃ + ⇧ + ⌘ + F </td>
<td> Toggle distraction-free mode </td>
</tr>
<tr>
<td> ⌘ + K, ⌘ + B  </td>
<td> Toggle side bar              </td>
</tr>
<tr>
<td> ⌃ + ⇧ + P     </td>
<td> Show scope in status bar     </td>
</tr>
</tbody>
</table>


<hr />

<h3>Find/Replace</h3>

<table>
<thead>
<tr>
<th> Keypress  </th>
<th> Command       </th>
</tr>
</thead>
<tbody>
<tr>
<td> ⌘ + F     </td>
<td> Find          </td>
</tr>
<tr>
<td> ⌘ + ⌥ + F </td>
<td> Replace       </td>
</tr>
<tr>
<td> ⌘ + ⇧ + F </td>
<td> Find in files </td>
</tr>
</tbody>
</table>


<hr />

<h3>Scrolling</h3>

<table>
<thead>
<tr>
<th> Keypress </th>
<th> Command                                </th>
</tr>
</thead>
<tbody>
<tr>
<td> ⌃ + V    </td>
<td> Scroll down one page                   </td>
</tr>
<tr>
<td> ⌃ + L    </td>
<td> Center current line vertically in page </td>
</tr>
<tr>
<td> ⌘ + Down </td>
<td> Scroll to end of file                  </td>
</tr>
<tr>
<td> ⌘ + Up   </td>
<td> Scroll to start of file                </td>
</tr>
</tbody>
</table>


<hr />

<h3>Tabs</h3>

<table>
<thead>
<tr>
<th> Keypress    </th>
<th> Command                                       </th>
</tr>
</thead>
<tbody>
<tr>
<td> ⌘ + ⇧ + t   </td>
<td> Open last closed tab                          </td>
</tr>
<tr>
<td> ⌘ + [NUM]   </td>
<td> Jump to tab in current group where num is 1-9 </td>
</tr>
<tr>
<td> ⌘ + 0       </td>
<td> Jump to 10th tab in current group             </td>
</tr>
<tr>
<td> ⌘ + ⇧ + [   </td>
<td> Cycle left through tabs                       </td>
</tr>
<tr>
<td> ⌘ + ⇧ + ]   </td>
<td> Cycle right through tabs                      </td>
</tr>
<tr>
<td> ^ + Tab     </td>
<td> Cycle up through recent tabs                  </td>
</tr>
<tr>
<td> ⇧ + ^ + Tab </td>
<td> Cycle down through recent tabs                </td>
</tr>
</tbody>
</table>


<hr />

<h3>Split window</h3>

<table>
<thead>
<tr>
<th> Keypress      </th>
<th> Command                                       </th>
</tr>
</thead>
<tbody>
<tr>
<td> ⌘ + ⌥ + 1     </td>
<td> Revert view to single column                  </td>
</tr>
<tr>
<td> ⌘ + ⌥ + 2     </td>
<td> Split view into two columns                   </td>
</tr>
<tr>
<td> ⌘ + ⌥ + 3     </td>
<td> Split view into three columns                 </td>
</tr>
<tr>
<td> ⌘ + ⌥ + 4     </td>
<td> Split view into four columns                  </td>
</tr>
<tr>
<td> ⌘ + ⌥ + 5     </td>
<td> Set view to grid (4 groups)                   </td>
</tr>
<tr>
<td> ⌃ + [NUM]     </td>
<td> Jump to group where num is 1-4                </td>
</tr>
<tr>
<td> ⌃ + ⇧ + [NUM] </td>
<td> Move file to specified group where num is 1-4 </td>
</tr>
</tbody>
</table>


<hr />

<h3>BookMark</h3>

<table>
<thead>
<tr>
<th> Keypress   </th>
<th> Command           </th>
</tr>
</thead>
<tbody>
<tr>
<td> ⌘ + F2     </td>
<td> Toggle bookmark   </td>
</tr>
<tr>
<td> F2         </td>
<td> Next bookmark     </td>
</tr>
<tr>
<td> ⇧ + F2     </td>
<td> Previous bookmark </td>
</tr>
<tr>
<td> ⇧ + ⌘ + F2 </td>
<td> Clear bookmarks   </td>
</tr>
</tbody>
</table>


<hr />

<h3>Text manipulation</h3>

<table>
<thead>
<tr>
<th> Keypress                 </th>
<th> Command                       </th>
</tr>
</thead>
<tbody>
<tr>
<td> ⌘ + K, ⌘ + U             </td>
<td> Transform to Uppercase        </td>
</tr>
<tr>
<td> ⌘ + K, ⌘ + L             </td>
<td> Transform to Lowercase        </td>
</tr>
<tr>
<td> ⌘ + ⌃ + up, ⌘ + ⌃ + down </td>
<td> Clip text upwards / downwards </td>
</tr>
</tbody>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Nice Web Design Tool - Bracket]]></title>
    <link href="http://stonefishy.github.io/blog/2015/03/02/a-nice-web-design-tool-bracket/"/>
    <updated>2015-03-02T17:19:17+08:00</updated>
    <id>http://stonefishy.github.io/blog/2015/03/02/a-nice-web-design-tool-bracket</id>
    <content type="html"><![CDATA[<p><code>Bracket</code> is open source web design text editor, it focus with visual tools and preprocesssor support. It is easy to design web page in the browser, we can get the page layout in time when we change the html, css, javascript. We don&rsquo;t need to save the file and refresh the browser. That&rsquo;s so convenience.</p>

<!-- more -->


<p><code>Bracket</code> supports the element highlight on the page in time when you put your mouse cursor on the specific html tag.</p>

<p>Absolutly, I recommend you to design you website with it. You can download it from <a href="https://github.com/adobe/brackets/releases/download/release-1.1%2Beb4/Brackets.1.1.Extract.dmg">here</a> for Mac OS. Also you can download it for other platform from <a href="https://github.com/adobe/brackets/releases">this</a>.</p>

<p>The Extract for <code>Brackets</code> (Preview) extension lets you pull out design information from a PSD including colors, fonts, gradients, and measurement information as clean, minimal CSS via contextual code hints. You can also extract layers as images, use information from the PSD to define preprocessor variables, and easily get dimensions between objects. This is very benefit for web designer which want to design web page with PSD source file.</p>

<p>The <code>Bracket</code> has three big features, they are below:</p>

<ul>
<li><p><strong>Inline Editor</strong> <br/>
We don&rsquo;t need to jump between file tabs when we want to change the style of the specific ID.
Just put the mouse cursor on that ID and press <code>Command</code>/<code>Ctrl + E</code>, <code>Bracket</code> will show you all the CSS selectors with that ID in an inline window so you can work on your code side-by-side without any popups.</p></li>
<li><p><strong>Live Preview</strong> <br/>
Get a real-time connection to your browser. Make changes to CSS and HTML and you&rsquo;ll instantly see those changes on the page.</p></li>
<li><p><strong>Preprocessor Support</strong> <br/>
  With Brackets you can use <code>Quick Edit</code> and <code>Live Highlight</code> with your <code>LESS</code> and <code>SCSS</code> files which will make working with them easier than ever.</p></li>
</ul>


<p>With <code>Bracket</code>, you can improve your working efficiency and save your time. This web design tool is so power, and the offical website is <a href="http://brackets.io/">here</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A New Way for Developing Web Application Front-End]]></title>
    <link href="http://stonefishy.github.io/blog/2015/01/13/a-new-way-for-developing-web-application-front-end/"/>
    <updated>2015-01-13T22:43:30+08:00</updated>
    <id>http://stonefishy.github.io/blog/2015/01/13/a-new-way-for-developing-web-application-front-end</id>
    <content type="html"><![CDATA[<p>When we develop web application, if we write or modify the HTML structure, CSS style and javascript, we need to compile the code and deploy it, and then refresh page, finally we can see our changes. There are so many steps. So could we skip these steps and just see our changes on page directly when we save the codes. Yes, I can answer you now.</p>

<p>In order to achieve this goal, we need to install <code>Guard</code>, <code>LiveReload</code> and related stuff, configure it in our web application project.</p>

<!-- more -->


<p></p>

<h3>Guard</h3>

<p><code>Guard</code> is a command line tool to easily handle events on file system modifications. The offical website in <a href="http://guardgem.org/">here</a>.</p>

<ul>
<li>File system changes handled by awesome Listen gem.</li>
<li>Support for visual system notifications.</li>
<li>Huge eco-system with more than 220 guard plugins, go to this <a href="https://rubygems.org/search?query=guard-">website</a> to get plugins what you want.</li>
</ul>


<p>The simplest way to install guard is to use <code>Bundler</code>. Go to the guard offical website to see how to install it.</p>

<h3>LiveReload</h3>

<p><code>LiveReload</code> monitors changes in the file system. As soon as you save a file, it is preprocessed as needed, and the browser is refreshed.  <br/>
Even cooler, when you change a CSS file or an image, the browser is updated instantly without reloading the page.</p>

<p>And here, we use <code>guard-livereload</code> plugin to notificate the browser to reload page. this plugin base on <code>Guard</code> and <code>LiveReload</code>, you have to install Guard firstly. Visit this <a href="https://github.com/guard/guard-livereload/">website</a> to see how to install it.</p>

<h3>LiveReload Safari/Chrome extension</h3>

<p>Finally, you need to install <code>LiveReload Safari Or Chrome Extension</code>, and here, we just use chrome to load web application. So go to Chrome Web Store and find livereload extension to install it on your chrome browser. And also you can use Safari browser.</p>

<p>And now the tools we need have been installed. So let&rsquo;s getting started.
<code>
$ guard init livereload
</code>
By runing above command line, it will add guard definition to your <code>Guardfile</code>. You can adapt your &lsquo;view&rsquo; files like you want. And the default content of Guardfile by livereload initialize is below:  <br/>
<code>ruby
guard 'livereload' do
  watch(%r{app/views/.+\.(erb|haml|slim)})
  watch(%r{app/helpers/.+\.rb})
  watch(%r{public/.+\.(css|js|html)})
  watch(%r{config/locales/.+\.yml})
  # Rails Assets Pipeline
  watch(%r{(app|vendor)(/assets/\w+/(.+\.(css|js|html))).*}) { |m| "/assets/#{m[3]}" }
end
</code>
And you can see that there has some watch command in the Guardfile. Changing it by your situation.</p>

<p>Now I will use a login page to test the guard and livereload how to work. This project contains script file, less file and html file. When we change the less file it will generate css file automatically, and here we use Sublime Text plugin to finished it, and also you can use <code>guard-less</code> plugin which is guard plugin. <br/>
<img src="/assets/images/project-structure.png" alt="" /></p>

<p>In test project directory, we can find the Gemfile and Guardfile.
<figure class='code'><figcaption><span>Gemfile</p></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">A</span> <span class="n">sample</span> <span class="no">Gemfile</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;source &amp;ldquo;&lt;a href=&quot;https:/</span><span class="o">/</span><span class="n">rubygems</span><span class="o">.</span><span class="n">org</span><span class="s2">&quot;&gt;https://rubygems.org&lt;/a&gt;&amp;rdquo;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&lt;h1&gt;gem &amp;ldquo;rails&amp;rdquo;&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&lt;p&gt;group :development do</span>
</span><span class='line'><span class="s2">    gem &amp;lsquo;guard&amp;rsquo;</span>
</span><span class='line'><span class="s2">    gem &amp;lsquo;guard-livereload&amp;rsquo;, require: false</span>
</span><span class='line'><span class="s2">end</span>
</span><span class='line'><span class="s2">&lt;code&gt;``</span>
</span><span class='line'><span class="s2">And here we just only use&lt;/code&gt;guard-livereload plugin&lt;code&gt;, we also can use&lt;/code&gt;guard-less&lt;code&gt;to configure the less to auto generate css file. But here we use the&lt;/code&gt;Sublime Text` development tools to develop this project, it supports plugin to generate less to css.&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&lt;p&gt;Let&amp;rsquo;s see the guard how to watch our project files. the content of Guardfile is below:</span>
</span></code></pre></td></tr></table></div></figure> ruby Guardfile</p>

<h1>A sample Guardfile</h1>

<h1>More info at <a href="https://github.com/guard/guard#readme">https://github.com/guard/guard#readme</a></h1>

<h2>Uncomment and set this to only include directories you want to watch</h2>

<h1>directories %w(app lib config test spec feature)</h1>

<h2>Uncomment to clear the screen before every task</h2>

<h1>clearing :on</h1>

<h2>Guard internally checks for changes in the Guardfile and exits.</h2>

<h2>If you want Guard to automatically start up again, run guard in a</h2>

<h2>shell loop, e.g.:</h2>

<h1>#</h1>

<h2>$ while bundle exec guard; do echo &ldquo;Restarting Guard&hellip;&rdquo;; done</h2>

<h1>#</h1>

<h2>Note: if you are using the <code>directories</code> clause above and you are not</h2>

<h2>watching the project directory (&lsquo;.&rsquo;), the you will want to move the Guardfile</h2>

<h2>to a watched dir and symlink it back, e.g.</h2>

<p>#</p>

<h1>$ mkdir config</h1>

<h1>$ mv Guardfile config/</h1>

<h1>$ ln -s config/Guardfile .</h1>

<p>#</p>

<h1>and, you&rsquo;ll have to watch &ldquo;config/Guardfile&rdquo; instead of &ldquo;Guardfile&rdquo;</h1>

<p>guard &lsquo;livereload&rsquo; do
    watch /.*/
end
&#8220;`
In there, you will see that the all file in this project directory has been watched by guard-livereload.</p>

<p>Type below commands in your terminal.
<code>
$ guard
</code>
It will prompt you that LiveReload is waiting for a browser to connect. And the Guard is now watching at your specific files.</p>

<p>Open the web application on your chrome browser, and click LiveReload extension. And now you will see the terminal has a message said Browser connected.</p>

<p>So far, you have prepared all configurations. And now you can modify the source file and save it, then you will see the web application automatically refresh. <br/>
<img src="/assets/images/auto-refresh-page.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Run Multiple IE Version on Same Computer]]></title>
    <link href="http://stonefishy.github.io/blog/2015/01/07/how-to-run-multiple-ie-version-on-same-cotim/"/>
    <updated>2015-01-07T16:31:17+08:00</updated>
    <id>http://stonefishy.github.io/blog/2015/01/07/how-to-run-multiple-ie-version-on-same-cotim</id>
    <content type="html"><![CDATA[<p>As web developer, we usually need to face the challenge of making cross-browser compatible. Especially IE browser&rsquo;s multiple version. Because its quirks of rendering websites differently across its versions of <code>IE6</code>, <code>IE7</code>, <code>IE8</code> and possibly <code>IE9</code> and <code>IE10</code>.</p>

<p>Most of us have only one version of IE browser on our computer, and the compatible mode of IE is not really specific version which you want to simulate.</p>

<!-- more-->


<p>So how to run multiple version of IE on same time. Many developers install virtual machine to use the different versions. But this is not the best way.</p>

<p>In there, I will tell you there has a free tool called <code>IETester</code> can solve your problem. Use this tool can quick and easy way to run IE6, IE7, IE8 and IE9 on the same computer at the same time. And this tool just only support windows operation system. It also supports develope tool which can help developer to check web application on different version of IE.</p>

<p>This is a screen shot of <code>IETester</code>:  <br/>
<img src="/assets/images/ie-tester.png" alt="" /></p>

<p>You can download it from this address <a href="http://www.my-debugbar.com/ietester/install-ietester-v0.5.4.exe">IETester</a></p>

<p>There has another online tools called <code>Browser Sandbox</code> can solve this problem, but it is not free, if you have money, this tool will be better for you. It support any versions of <code>Firefox</code>, <code>Opera</code>, <code>Safari</code>, <code>Chrome</code> and also <code>IE</code>. You can go to this <a href="http://spoon.net/browsers/">website</a> to visit.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Install Packages in Sublime Text 3]]></title>
    <link href="http://stonefishy.github.io/blog/2014/12/26/how-to-install-sublime-text-plugin/"/>
    <updated>2014-12-26T22:35:36+08:00</updated>
    <id>http://stonefishy.github.io/blog/2014/12/26/how-to-install-sublime-text-plugin</id>
    <content type="html"><![CDATA[<p><code>Sublime Text</code> is a sophisticated text editor for code, markup and prose. You can go to offical <strong><a href="http://www.sublimetext.com/">website</a></strong> to download and see how to use it. It&rsquo;s a very powerful weapon for developer. And also it has so many packages to expand its functional.</p>

<p>If you want to install packages in your sublime text. First of all, you need to install <code>Package Control</code> that is <code>Sublime Text</code> package manager that makes it exceedingly simple to find, install and keep packages up-to-date.</p>

<p>Open Sublime Text 3 and choose <code>View &gt; Show Console</code> menu. Paste below codes into console.
<code>python
import urllib.request,os,hashlib; h = '2deb499853c4371624f5a07e27c334aa' + 'bf8c4e67d14fb0525ba4f89698a6d7e1'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)
</code></p>

<!--more-->


<p>This code creates the Installed Packages folder for you (if necessary), and then downloads the <code>Package Control.sublime-package</code> into it.</p>

<p>Since the <code>Package Control</code> install successfull, you can intall any packages which you want, such as less,less2css package. Press <code>Command+Shift+P</code> open the <code>Command palette</code> and find the <code>Package Control: Install Package</code>, like this: <br/>
<img src="/assets/images/command-palette.png" alt="command palette" /></p>

<p>Choose <code>Package Control: Install Package</code> menu, and wait a seconds it will prompt package installer, and then you can search packages what you want and install it. <br/>
<img src="/assets/images/package-installer.png" alt="package installer" /></p>
]]></content>
  </entry>
  
</feed>
