<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Test | Stonefishy Blog]]></title>
  <link href="http://stonefishy.github.io/blog/categories/test/atom.xml" rel="self"/>
  <link href="http://stonefishy.github.io/"/>
  <updated>2014-12-23T23:33:17+08:00</updated>
  <id>http://stonefishy.github.io/</id>
  <author>
    <name><![CDATA[Yu SHI]]></name>
    <email><![CDATA[andrewsy@live.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[What Is Cucumber]]></title>
    <link href="http://stonefishy.github.io/blog/2014/12/23/what-is-cucumber/"/>
    <updated>2014-12-23T00:23:25+08:00</updated>
    <id>http://stonefishy.github.io/blog/2014/12/23/what-is-cucumber</id>
    <content type="html"><![CDATA[<p><code>Cucumber</code> is a tool that can execute <code>plain-text</code> functional descriptions. And also it&rsquo;s  <code>BDD(Behaviour Driven Development)</code> <code>automated tests</code>. It is written by <code>Ruby</code>, and now it supports more than 40 languages, such as <code>Java</code>, <code>C#</code> and <code>Scala</code> etc.</p>

<h3>Install</h3>

<p>Firstly, we need to install <code>Ruby</code> and <code>RubyGems</code>, to check whether the installation of Ruby and RubyGems is successful. You can inputx the commands to terminal, just like as below:</p>

<!--``` linux
~  ruby --version
ruby 2.0.0p481 (2014-05-08 revision 45883) [universal.x86_64-darwin14]
~  gem --version
2.0.14  
```-->


<p>And then we can run the command below to install <code>Cucumber</code>:</p>

<!--
``` linux
~  gem install cucumber
```-->


<p>After this, put below command to see how to use it.</p>

<!--
``` linux
cucumber --help
```-->


<h3>Gherkin</h3>

<p><code>Gherkin</code> is a language that can be understand by <code>Cucumber</code>. It&rsquo;s a <code>Business Readable</code>, <code>Domain Specific Language</code>. Very easy to understand what the functional want to do.</p>

<p>The <code>Gherkin</code> has two purpose, documention and automated test. The structure is Treetop grammer than is part of Cucumber codebase and use indentation to format it.</p>

<p> The <code>Gherkin</code> has two conventions:
 + Single <code>Gherkin</code> source file contains a description of single feature.
 + The source file is feature extention file(<code>*.feature</code>).</p>

<p>LikeÂ <code>YAML(Yet Another Markup Language)</code>, Gherkin is a line-oriented language that uses indentation to define structure. Most lines start with keyword. And you can start with a hash sign(#) to comment the text.</p>

<p>A Gherkin source file usually looks like this</p>

<!--
``` gherkin
 1: Feature: Some terse yet descriptive text of what is desired 2:   Textual description of the business value of this feature 3:   Business rules that govern the scope of the feature 4:   Any additional information that will make the feature easier to understand 5:  6:   Scenario: Some determinable business situation 7:     Given some precondition 8:       And some other precondition 9:      When some action by the actor10:       And some other action11:       And yet another action12:      Then some testable outcome is achieved13:       And something else we can check happens too14: 15:   Scenario: A different situation
```-->


<p>Above the codes, the <code>Feature</code>, <code>Scenario</code>, <code>Given</code>, <code>And</code>, <code>When</code>, <code>Then</code> all are keywords of <code>Gherkin</code>.</p>
]]></content>
  </entry>
  
</feed>
